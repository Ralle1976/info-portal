name: Basic Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans weekly on Sunday at 02:00 UTC
    - cron: '0 2 * * 0'

env:
  PYTHON_VERSION: '3.11'

jobs:
  basic-security:
    name: Basic Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
          pip install -r requirements.txt
          
      - name: Run Bandit security linter
        run: |
          bandit -r app/ -f txt || echo "‚ö†Ô∏è Bandit found potential issues (non-blocking)"
        continue-on-error: true
        
      - name: Check for vulnerable dependencies
        run: |
          safety check || echo "‚ö†Ô∏è Safety found potential vulnerabilities (non-blocking)"
        continue-on-error: true
        
      - name: Basic secret scanning
        run: |
          echo "üîç Checking for potential secrets..."
          
          # Check for common secret patterns (basic)
          if grep -r "password.*=" app/ | grep -v "os.environ\|config" | grep -v ".pyc"; then
            echo "‚ö†Ô∏è Potential hardcoded passwords found - please review"
          else
            echo "‚úÖ No obvious hardcoded passwords"
          fi
          
          if grep -r "secret.*=" app/ | grep -v "os.environ\|config" | grep -v ".pyc"; then
            echo "‚ö†Ô∏è Potential hardcoded secrets found - please review"  
          else
            echo "‚úÖ No obvious hardcoded secrets"
          fi
          
          if grep -r "api.*key.*=" app/ | grep -v "os.environ\|config" | grep -v ".pyc"; then
            echo "‚ö†Ô∏è Potential hardcoded API keys found - please review"
          else
            echo "‚úÖ No obvious hardcoded API keys"
          fi
        continue-on-error: true

  docker-basic-scan:
    name: Basic Docker Security
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Basic Dockerfile checks
        run: |
          echo "üê≥ Basic Docker security checks..."
          
          if [ ! -f "Dockerfile" ]; then
            echo "‚ö†Ô∏è No Dockerfile found"
            exit 0
          fi
          
          # Check if running as root
          if grep -q "USER.*root" Dockerfile; then
            echo "‚ö†Ô∏è Running as root user - consider using non-root user"
          else
            echo "‚úÖ Not explicitly running as root"
          fi
          
          # Check for ADD with URLs
          if grep -q "ADD.*http" Dockerfile; then
            echo "‚ö†Ô∏è Using ADD with remote URLs - consider using COPY or RUN wget"
          else
            echo "‚úÖ No remote ADD commands found"
          fi
          
          # Check for latest tag
          if grep -q "FROM.*:latest" Dockerfile; then
            echo "‚ö†Ô∏è Using 'latest' tag - consider pinning to specific versions"
          else
            echo "‚úÖ Not using 'latest' tags"
          fi
        continue-on-error: true